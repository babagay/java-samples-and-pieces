package JavaCore.Module08web;

/**
 * Задание 1
 * Пользователь вводит с консоли числа A и B.
 * Программа спрашивает пользователя какое математическое действие надо применить к этим числам:
 * +
 * -
 * *
 * /
 * %
 * ==
 * >
 * <
 * Действие пользователь вводит в виде соответствующего символа
 * После чего программа в отдельном потоке выполняет действие.
 * Результат в консоль должен вывести main поток
 * Решить задачу без использования глобальных переменных
 *
 * Задание 2
 * Написать функцию которая создает массив интов размером size. Числа в массиве идут по возрастанию от 1 до size.
 *
 * С помощью этой функции создайте массив с size равным 80 000 000.
 *
 * Подсчет
 * для каждого элемента массива подсчитать result = sin(x) + cos(x), где x - итый элемент массива. Вывести в консоль сумму всех result для всего массива. Распараллельте эту логику на потоки для ускорения вычислений.
 *
 * Пользователю надо ввести N в консоль. N это кол-во раз, сколько надо повторить Подсчет. Одновременно в программе может быть запущено только вычисление одного Подсчета. Но при этом саму итерацию подсчета нужно параллелить.
 *
 * Программа должна во время одного запуска отработать в двух режимах. И подсчитывать время которое она затратила на каждый из режимов работы:
 * Режим Thread. Программа для работы создает Thread-ы.
 * Режим Thread Pool. Программа использует один thread pool  единожды созданный.
 * Режим Thread и Thread Pool не могут работать одновременно друг с другом. Только по очереди.
 *
 * Задание 3
 * Сохранить в программе множество из 50 ссылок в интернет на картинки.
 *
 * Написать JavaFX приложение в котором есть одна кнопка - “Обновить”
 * И 25 картинок в одном окне в виде матрицы (5 на 5). Картинки беруться рандомно из массива ссылок.
 * После нажатия на кнопку “Обновить”, картинки должны быть еще раз рандомно взяты из множества ссылок, загружены и отображены в окне.
 * При этом нельзя хранить на жестком диске картинки. Каждый раз надо загружать их из интернета.
 * Задание 4 (дополнительно)
 * Дополнить задание 3.
 * Добавить ProgressBar поверх картинки которая находиться в состоянии загрузки.
 * Задание - текстовый редактор 1
 * Создать JavaFX приложение в котором есть текстовое поле для ввода пути к файлу.
 * Кнопка Load которая загружает файл в отдельном потоке.
 * И большое текстовое поле куда выводиться содержимое файла.
 * Пользователь должен иметь доступ редактировать содержимое файла прямо в окне программы.
 * Последним элементом программы является кнопка Save которая сохраняет файл по указанному пути. Делает это в отдельном потоке
 * Задание - текстовый редактор 2
 * Для решения этой задачи необходимо выполнить первую задачу.
 * Надо добавить в программу:
 * Текстовое поле для ввода числа
 * Кнопку Fibonacci которая берет число из текстового поля, назовем его Х.
 * Затем в отдельном потоке начинает искать(нельзя хранить заранее созданные числа) число Фибоначчи под номером Х.
 * Все числа Фибоначчи до числа Фибоначчи под номером Х должны быть записаны в файл, путь к которому указан в текстовом поле (см. Задание 1).
 * При процессе поиска числа Фибоначчи программа должна реагировать на действия пользователя. Перетаскивать мышкой по экрану, редактироваться текстовые поля. Другими словами - не должна зависать.
 *
 * Задание - текстовый редактор 1
 * Создать JavaFX приложение в котором есть текстовое поле для ввода пути к файлу.
 * Кнопка Load которая загружает файл в отдельном потоке.
 * И большое текстовое поле куда выводиться содержимое файла.
 * Пользователь должен иметь доступ редактировать содержимое файла прямо в окне программы.
 * Последним элементом программы является кнопка Save которая сохраняет файл по указанному пути. Делает это в отдельном потоке
 *
 *  Задание - текстовый редактор 2
 * Для решения этой задачи необходимо выполнить первую задачу.
 * Надо добавить в программу:
 * Текстовое поле для ввода числа
 * Кнопку Fibonacci которая берет число из текстового поля, назовем его Х.
 * Затем в отдельном потоке начинает искать(нельзя хранить заранее созданные числа) число Фибоначчи под номером Х.
 * Все числа Фибоначчи до числа Фибоначчи под номером Х должны быть записаны в файл, путь к которому указан в текстовом поле (см. Задание 1).
 * При процессе поиска числа Фибоначчи программа должна реагировать на действия пользователя. Перетаскивать мышкой по экрану, редактироваться текстовые поля. Другими словами - не должна зависать.
 */
public class App
{
}
